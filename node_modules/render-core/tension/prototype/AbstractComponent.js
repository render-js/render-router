/**
 * This is the component prototype.
 */
var AbstractComponent = /** @class */ (function () {
    function AbstractComponent(config) {
        //标签名称
        this.name = config.name;
        //标签模板样式
        this.template = config.template;
        //添加box样式
        if (typeof config === "undefined") {
            this.config = {
                boxMode: true
            };
        }
        else {
            this.config = config.config;
        }
        //添加box样式
        if (typeof config.boxStyle === "undefined") {
            this.boxStyle = "";
        }
        else {
            this.boxStyle = config.boxStyle.replace(/^{/, "");
            this.boxStyle = this.boxStyle.replace(/}$/, "");
            this.boxStyle = this.boxStyle.replace(/\n/, "");
            this.boxStyle = this.boxStyle.trim();
        }
        //props validate
        if (typeof config.props === "undefined") {
            this.props = [];
        }
        else {
            this.props = config.props;
        }
        //添加数据
        if (typeof config.data === "undefined") {
            this.data = {};
        }
        else {
            this.data = config.data;
        }
        //添加计算属性
        if (typeof config.computed === "undefined") {
            this.computed = {};
        }
        else {
            this.computed = config.computed;
        }
        //添加方法属性
        if (typeof config.methods === "undefined") {
            this.methods = {};
        }
        else {
            this.methods = config.methods;
        }
        //添加监控属性
        if (typeof config.watcher === "undefined") {
            this.watcher = {};
        }
        else {
            this.watcher = config.watcher;
        }
        //生命周期函数
        if (typeof config.beforeRender === "undefined") {
            this.beforeRender = function () { };
        }
        else {
            this.beforeRender = config.beforeRender;
        }
        if (typeof config.afterRender === "undefined") {
            this.afterRender = function () { };
        }
        else {
            this.afterRender = config.afterRender;
        }
    }
    AbstractComponent.prototype.getName = function () {
        return this.name;
    };
    AbstractComponent.prototype.getTemplate = function () {
        return this.template;
    };
    AbstractComponent.prototype.getConfig = function () {
        return this.config;
    };
    AbstractComponent.prototype.getBoxStyle = function () {
        return this.boxStyle;
    };
    AbstractComponent.prototype.getProps = function () {
        return this.props;
    };
    AbstractComponent.prototype.getData = function () {
        return this.data;
    };
    AbstractComponent.prototype.getMethods = function () {
        return this.methods;
    };
    AbstractComponent.prototype.getComputed = function () {
        return this.computed;
    };
    AbstractComponent.prototype.getWatcher = function () {
        return this.watcher;
    };
    AbstractComponent.prototype.getBeforeRender = function () {
        return this.beforeRender;
    };
    AbstractComponent.prototype.getAfterRender = function () {
        return this.afterRender;
    };
    return AbstractComponent;
}());
export { AbstractComponent };
