/**
 * This function is used to mount the dom to the html document.
 * @param controller
 * @param proto
 * @param parent
 * @param child
 * @param tagTemplate
 */
export function archive_mount(controller, proto, parent, child, tagTemplate) {
    //mount
    var renderSpace = document.createElement("div");
    //给box添加样式
    renderSpace.setAttribute("style", proto.getBoxStyle());
    //指定渲染空间
    controller.componentAttachedRootElement = renderSpace;
    //开始渲染
    parent.replaceChild(renderSpace, child);
    while (tagTemplate.hasChildNodes())
        renderSpace.append(tagTemplate.firstChild);
}
/**
 * Insert elements without div element
 * @param root
 */
export function extract_mount(root) {
    var begin = document.createElement("div");
    begin.setAttribute("anchor", "begin");
    begin.setAttribute("style", "display:none");
    root.componentAttachedRootElement.parentNode.insertBefore(begin, root.componentAttachedRootElement);
    root.anchorBegin = begin;
    while (root.componentAttachedRootElement.hasChildNodes())
        root.componentAttachedRootElement.parentNode.insertBefore(root.componentAttachedRootElement.firstChild, root.componentAttachedRootElement);
    var parent = root.componentAttachedRootElement.parentNode;
    // @ts-ignore
    root.anchor = root.componentAttachedRootElement;
    root.anchorEnd.setAttribute("anchor", "end");
    root.anchorBegin.setAttribute("style", "display:none");
    root.componentAttachedRootElement = parent;
}
export function mountForUpdate(tagTemplate) {
    var renderSpace = document.createElement("div");
    renderSpace.setAttribute("anchor", "end");
    while (tagTemplate.hasChildNodes()) {
        renderSpace.append(tagTemplate.firstChild);
    }
    return renderSpace;
}
