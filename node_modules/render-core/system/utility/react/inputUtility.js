export function inputUtility(element, space) {
    switch (element.getAttribute("type")) {
        case "text":
            editType(element, space);
            break;
        case "color":
            assignType(element, space);
            break;
        case "date":
            assignType(element, space);
            break;
        case "time":
            assignType(element, space);
            break;
        case "email":
            editType(element, space);
            break;
        case "url":
            editType(element, space);
            break;
        case "week":
            assignType(element, space);
            break;
        case "tel":
            editType(element, space);
            break;
        case "search":
            editType(element, space);
            break;
        case "range":
            assignType(element, space);
            break;
        case "radio":
            assignType(element, space);
            break;
        case "password":
            editType(element, space);
            break;
        case "number":
            editType(element, space);
            break;
        case "month":
            assignType(element, space);
            break;
        case "hidden":
            editType(element, space);
            break;
        case "file":
            filesType(element, space);
            break;
        case "datetime-local":
            assignType(element, space);
            break;
        case "datetime":
            assignType(element, space);
            break;
        case "checkbox":
            assignType(element, space);
            break;
        default:
            console.log("This type input can`t be tackled!");
            break;
    }
}
/**
 *
 * @param element
 * @param space
 */
function assignType(element, space) {
    Reflect.set(space, "origin", {
        tag: element.tagName,
        id: element.getAttribute("id"),
    });
}
/**
 *
 * @param element
 * @param space
 */
function editType(element, space) {
    Reflect.set(space, "origin", {
        tag: element.tagName,
        id: element.getAttribute("id"),
        // @ts-ignore
        start: element.selectionStart
    });
}
/**
 *
 * @param element
 * @param space
 */
export function filesType(element, space) {
    Reflect.set(space, "origin", {
        tag: element.tagName,
        id: element.getAttribute("id")
    });
}
/**
 *
 * @param element
 * @param space
 */
export function selectUtility(element, space) {
    Reflect.set(space, "origin", {
        tag: element.tagName,
        id: element.getAttribute("id"),
        // @ts-ignore
        selected: element.value
    });
}
/**
 *
 * @param element
 * @param space
 */
export function textareaUtility(element, space) {
    Reflect.set(space, "origin", {
        tag: element.tagName,
        id: element.getAttribute("id"),
        // @ts-ignore
        start: element.selectionStart
    });
}
