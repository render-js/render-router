import { assignType, checkType, fileType, textType } from "./inputType";
/**
 *
 * @param controller
 */
export function locateInputAddress(controller) {
    //判断是否是输入导致的数据更新
    if (controller.dataForMethod.hasOwnProperty("origin")) {
        var doc = Reflect.get(controller.dataForMethod, "origin");
        var target = document.getElementById(doc.id);
        switch (doc.tag) {
            case "INPUT":
                locateInput(target, doc, controller);
                break;
            case "SELECT":
                locateSelect(target, doc);
                break;
            case "TEXTAREA":
                locateTextArea(target, doc, controller);
                break;
            default:
                console.log("Can't locate input address");
                break;
        }
    }
}
/**
 *
 * @param target
 * @param doc
 * @param controller
 */
function locateInput(target, doc, controller) {
    switch (target.getAttribute("type")) {
        case "text":
            textType(target, doc, controller);
            break;
        case "color":
            assignType(target, controller);
            break;
        case "date":
            assignType(target, controller);
            break;
        case "time":
            assignType(target, controller);
            break;
        case "email":
            textType(target, doc, controller);
            break;
        case "url":
            textType(target, doc, controller);
            break;
        case "week":
            assignType(target, controller);
            break;
        case "tel":
            textType(target, doc, controller);
            break;
        case "search":
            textType(target, doc, controller);
            break;
        case "range":
            assignType(target, controller);
            break;
        case "radio":
            checkType(target);
            break;
        case "password":
            textType(target, doc, controller);
            break;
        case "number":
            textType(target, doc, controller);
            break;
        case "month":
            assignType(target, controller);
            break;
        case "hidden":
            assignType(target, controller);
            break;
        case "file":
            fileType(target, controller);
            break;
        case "datetime-local":
            assignType(target, controller);
            break;
        case "datetime":
            assignType(target, controller);
            break;
        case "checkbox":
            assignType(target, controller);
            break;
        default:
            console.log("This type input can`t be tackled!");
            break;
    }
}
/**
 *
 * @param target
 * @param doc
 */
function locateSelect(target, doc) {
    // @ts-ignore
    var list = target.getElementsByTagName("option");
    for (var i = 0; i < list.length; i++) {
        if (list[i].value === doc.selected)
            list[i].selected = true;
    }
}
/**
 *
 * @param target
 * @param doc
 * @param controller
 */
function locateTextArea(target, doc, controller) {
    // @ts-ignore
    target.value = controller.dataForMethod[target.getAttribute("name")];
    // @ts-ignore
    target.focus();
    // @ts-ignore
    target.setSelectionRange(doc.start, doc.start);
}
